/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Initially generated by: https://openapi-generator.tech
 *
 * Now manually maintained
 */

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Formattable {
    /// Indicates the formatting language of the raw text
    #[serde(rename = "format", deserialize_with = "Option::deserialize")]
    pub format: Option<Format>,
    /// The raw text, as entered by the user
    #[serde(
        rename = "raw",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub raw: Option<Option<serde_json::Value>>,
    /// The text converted to HTML according to the format
    #[serde(
        rename = "html",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub html: Option<Option<serde_json::Value>>,
}

impl Formattable {
    pub fn new(format: Option<Format>) -> Formattable {
        Formattable {
            format,
            raw: None,
            html: None,
        }
    }
}
/// Indicates the formatting language of the raw text
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Format {
    #[serde(rename = "plain")]
    Plain,
    #[serde(rename = "markdown")]
    Markdown,
    #[serde(rename = "custom")]
    Custom,
}

impl Default for Format {
    fn default() -> Format {
        Self::Plain
    }
}
