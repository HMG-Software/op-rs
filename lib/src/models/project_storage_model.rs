/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProjectStorageModel {
    #[serde(rename = "_type")]
    pub _type: Type,
    /// The project storage's id
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "projectFolderMode")]
    pub project_folder_mode: ProjectFolderMode,
    /// Time of creation
    #[serde(rename = "createdAt")]
    pub created_at: String,
    /// Time of the most recent change to the project storage
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
    #[serde(rename = "_links", skip_serializing_if = "Option::is_none")]
    pub _links: Option<Box<models::ProjectStorageModelLinks>>,
}

impl ProjectStorageModel {
    pub fn new(
        _type: Type,
        id: i32,
        project_folder_mode: ProjectFolderMode,
        created_at: String,
        updated_at: String,
    ) -> ProjectStorageModel {
        ProjectStorageModel {
            _type,
            id,
            project_folder_mode,
            created_at,
            updated_at,
            _links: None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "ProjectStorage")]
    ProjectStorage,
}

impl Default for Type {
    fn default() -> Type {
        Self::ProjectStorage
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ProjectFolderMode {
    #[serde(rename = "inactive")]
    Inactive,
    #[serde(rename = "manual")]
    Manual,
}

impl Default for ProjectFolderMode {
    fn default() -> ProjectFolderMode {
        Self::Inactive
    }
}
