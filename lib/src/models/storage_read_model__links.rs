/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StorageReadModelLinks {
    #[serde(rename = "self")]
    pub param_self: Box<models::StorageReadModelLinksSelf>,
    #[serde(rename = "type")]
    pub r#type: Box<models::StorageReadModelLinksType>,
    #[serde(rename = "origin")]
    pub origin: Box<models::StorageReadModelLinksOrigin>,
    #[serde(rename = "open")]
    pub open: Box<models::StorageReadModelLinksOpen>,
    #[serde(rename = "authorizationState")]
    pub authorization_state: Box<models::StorageReadModelLinksAuthorizationState>,
    #[serde(rename = "authorize", skip_serializing_if = "Option::is_none")]
    pub authorize: Option<Box<models::StorageReadModelLinksAuthorize>>,
    #[serde(rename = "oauthApplication", skip_serializing_if = "Option::is_none")]
    pub oauth_application: Option<Box<models::StorageReadModelLinksOauthApplication>>,
    #[serde(
        rename = "oauthClientCredentials",
        skip_serializing_if = "Option::is_none"
    )]
    pub oauth_client_credentials: Option<Box<models::StorageReadModelLinksOauthClientCredentials>>,
}

impl StorageReadModelLinks {
    pub fn new(
        param_self: models::StorageReadModelLinksSelf,
        r#type: models::StorageReadModelLinksType,
        origin: models::StorageReadModelLinksOrigin,
        open: models::StorageReadModelLinksOpen,
        authorization_state: models::StorageReadModelLinksAuthorizationState,
    ) -> StorageReadModelLinks {
        StorageReadModelLinks {
            param_self: Box::new(param_self),
            r#type: Box::new(r#type),
            origin: Box::new(origin),
            open: Box::new(open),
            authorization_state: Box::new(authorization_state),
            authorize: None,
            oauth_application: None,
            oauth_client_credentials: None,
        }
    }
}
