/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TypeModel {
    /// Type id
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Type name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The color used to represent this type
    #[serde(rename = "color", skip_serializing_if = "Option::is_none")]
    pub color: Option<String>,
    /// Sort index of the type
    #[serde(rename = "position", skip_serializing_if = "Option::is_none")]
    pub position: Option<i32>,
    /// Is this type active by default in new projects?
    #[serde(rename = "isDefault", skip_serializing_if = "Option::is_none")]
    pub is_default: Option<bool>,
    /// Do work packages of this type represent a milestone?
    #[serde(rename = "isMilestone", skip_serializing_if = "Option::is_none")]
    pub is_milestone: Option<bool>,
    /// Time of creation
    #[serde(rename = "createdAt", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    /// Time of the most recent change to the user
    #[serde(rename = "updatedAt", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    #[serde(rename = "_links", skip_serializing_if = "Option::is_none")]
    pub _links: Option<Box<models::TypeModelLinks>>,
}

impl TypeModel {
    pub fn new() -> TypeModel {
        TypeModel {
            id: None,
            name: None,
            color: None,
            position: None,
            is_default: None,
            is_milestone: None,
            created_at: None,
            updated_at: None,
            _links: None,
        }
    }
}
