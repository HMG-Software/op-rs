/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RootModel {
    #[serde(rename = "_type")]
    pub _type: Type,
    /// The name of the OpenProject instance
    #[serde(rename = "instanceName")]
    pub instance_name: String,
    /// The OpenProject core version number for the instance  # Conditions  **Permission** requires admin privileges
    #[serde(rename = "coreVersion", skip_serializing_if = "Option::is_none")]
    pub core_version: Option<String>,
    #[serde(rename = "_links")]
    pub _links: Box<models::RootModelLinks>,
}

impl RootModel {
    pub fn new(_type: Type, instance_name: String, _links: models::RootModelLinks) -> RootModel {
        RootModel {
            _type,
            instance_name,
            core_version: None,
            _links: Box::new(_links),
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Root")]
    Root,
}

impl Default for Type {
    fn default() -> Type {
        Self::Root
    }
}
