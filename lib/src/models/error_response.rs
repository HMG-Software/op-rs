/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ErrorResponse {
    #[serde(rename = "_embedded", skip_serializing_if = "Option::is_none")]
    pub _embedded: Option<Box<models::ErrorResponseEmbedded>>,
    #[serde(rename = "_type")]
    pub _type: Type,
    #[serde(rename = "errorIdentifier")]
    pub error_identifier: String,
    #[serde(rename = "message")]
    pub message: String,
}

impl ErrorResponse {
    pub fn new(_type: Type, error_identifier: String, message: String) -> ErrorResponse {
        ErrorResponse {
            _embedded: None,
            _type,
            error_identifier,
            message,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Error")]
    Error,
}

impl Default for Type {
    fn default() -> Type {
        Self::Error
    }
}
