/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ValuesPropertyModel {
    #[serde(rename = "_type")]
    pub _type: Type,
    /// The key of the key - value pair represented by the Values::Property
    #[serde(rename = "property")]
    pub property: String,
    /// The value of the key - value pair represented by the Values::Property
    #[serde(rename = "value")]
    pub value: String,
    #[serde(rename = "_links")]
    pub _links: Box<models::ValuesPropertyModelLinks>,
}

impl ValuesPropertyModel {
    pub fn new(
        _type: Type,
        property: String,
        value: String,
        _links: models::ValuesPropertyModelLinks,
    ) -> ValuesPropertyModel {
        ValuesPropertyModel {
            _type,
            property,
            value,
            _links: Box::new(_links),
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Values::Property")]
    ValuesColonColonProperty,
}

impl Default for Type {
    fn default() -> Type {
        Self::ValuesColonColonProperty
    }
}
