/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GridWidgetModel {
    #[serde(rename = "_type")]
    pub _type: Type,
    /// The grid widget's unique identifier. Can be null, if a new widget is created within a grid.
    #[serde(rename = "id", deserialize_with = "Option::deserialize")]
    pub id: Option<i32>,
    /// An alternative, human legible, and unique identifier.
    #[serde(rename = "identifier")]
    pub identifier: String,
    /// The index of the starting row of the widget. The row is inclusive.
    #[serde(rename = "startRow")]
    pub start_row: i32,
    /// The index of the ending row of the widget. The row is exclusive.
    #[serde(rename = "endRow")]
    pub end_row: i32,
    /// The index of the starting column of the widget. The column is inclusive.
    #[serde(rename = "startColumn")]
    pub start_column: i32,
    /// The index of the ending column of the widget. The column is exclusive.
    #[serde(rename = "endColumn")]
    pub end_column: i32,
    #[serde(rename = "options", skip_serializing_if = "Option::is_none")]
    pub options: Option<serde_json::Value>,
}

impl GridWidgetModel {
    pub fn new(
        _type: Type,
        id: Option<i32>,
        identifier: String,
        start_row: i32,
        end_row: i32,
        start_column: i32,
        end_column: i32,
    ) -> GridWidgetModel {
        GridWidgetModel {
            _type,
            id,
            identifier,
            start_row,
            end_row,
            start_column,
            end_column,
            options: None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "GridWidget")]
    GridWidget,
}

impl Default for Type {
    fn default() -> Type {
        Self::GridWidget
    }
}
