/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GridWriteModel {
    /// The number of rows the grid has
    #[serde(rename = "rowCount", skip_serializing_if = "Option::is_none")]
    pub row_count: Option<i32>,
    /// The number of columns the grid has
    #[serde(rename = "columnCount", skip_serializing_if = "Option::is_none")]
    pub column_count: Option<i32>,
    /// The set of `GridWidget`s selected for the grid.  # Conditions  - The widgets must not overlap.
    #[serde(rename = "widgets", skip_serializing_if = "Option::is_none")]
    pub widgets: Option<Vec<models::GridWidgetModel>>,
    #[serde(rename = "_links", skip_serializing_if = "Option::is_none")]
    pub _links: Option<Box<models::GridWriteModelLinks>>,
}

impl GridWriteModel {
    pub fn new() -> GridWriteModel {
        GridWriteModel {
            row_count: None,
            column_count: None,
            widgets: None,
            _links: None,
        }
    }
}
