/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MembershipReadModel {
    #[serde(rename = "_type")]
    pub _type: Type,
    /// The membership's id
    #[serde(rename = "id")]
    pub id: i32,
    /// The time the membership was created.
    #[serde(rename = "createdAt")]
    pub created_at: String,
    /// The time the membership was last updated.
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
    #[serde(rename = "_embedded", skip_serializing_if = "Option::is_none")]
    pub _embedded: Option<Box<models::MembershipReadModelEmbedded>>,
    #[serde(rename = "_links")]
    pub _links: Box<models::MembershipReadModelLinks>,
}

impl MembershipReadModel {
    pub fn new(
        _type: Type,
        id: i32,
        created_at: String,
        updated_at: String,
        _links: models::MembershipReadModelLinks,
    ) -> MembershipReadModel {
        MembershipReadModel {
            _type,
            id,
            created_at,
            updated_at,
            _embedded: None,
            _links: Box::new(_links),
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Membership")]
    Membership,
}

impl Default for Type {
    fn default() -> Type {
        Self::Membership
    }
}
