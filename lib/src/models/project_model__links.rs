/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProjectModelLinks {
    #[serde(rename = "update", skip_serializing_if = "Option::is_none")]
    pub update: Option<Box<models::ProjectModelLinksUpdate>>,
    #[serde(rename = "updateImmediately", skip_serializing_if = "Option::is_none")]
    pub update_immediately: Option<Box<models::ProjectModelLinksUpdateImmediately>>,
    #[serde(rename = "delete", skip_serializing_if = "Option::is_none")]
    pub delete: Option<Box<models::ProjectModelLinksDelete>>,
    #[serde(rename = "createWorkPackage", skip_serializing_if = "Option::is_none")]
    pub create_work_package: Option<Box<models::ProjectModelLinksCreateWorkPackage>>,
    #[serde(
        rename = "createWorkPackageImmediately",
        skip_serializing_if = "Option::is_none"
    )]
    pub create_work_package_immediately:
        Option<Box<models::ProjectModelLinksCreateWorkPackageImmediately>>,
    #[serde(rename = "self")]
    pub param_self: Box<models::ProjectModelLinksSelf>,
    #[serde(rename = "categories")]
    pub categories: Box<models::ProjectModelLinksCategories>,
    #[serde(rename = "types")]
    pub types: Box<models::ProjectModelLinksTypes>,
    #[serde(rename = "versions")]
    pub versions: Box<models::ProjectModelLinksVersions>,
    #[serde(rename = "memberships")]
    pub memberships: Box<models::ProjectModelLinksMemberships>,
    #[serde(rename = "workPackages")]
    pub work_packages: Box<models::ProjectModelLinksWorkPackages>,
    #[serde(rename = "parent", skip_serializing_if = "Option::is_none")]
    pub parent: Option<Box<models::ProjectModelLinksParent>>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Box<models::ProjectModelLinksStatus>>,
    #[serde(rename = "storages", skip_serializing_if = "Option::is_none")]
    pub storages: Option<Vec<models::ProjectModelLinksStoragesInner>>,
    #[serde(rename = "projectStorages", skip_serializing_if = "Option::is_none")]
    pub project_storages: Option<Box<models::ProjectModelLinksProjectStorages>>,
    #[serde(rename = "ancestors", skip_serializing_if = "Option::is_none")]
    pub ancestors: Option<Vec<models::ProjectModelLinksAncestorsInner>>,
}

impl ProjectModelLinks {
    pub fn new(
        param_self: models::ProjectModelLinksSelf,
        categories: models::ProjectModelLinksCategories,
        types: models::ProjectModelLinksTypes,
        versions: models::ProjectModelLinksVersions,
        memberships: models::ProjectModelLinksMemberships,
        work_packages: models::ProjectModelLinksWorkPackages,
    ) -> ProjectModelLinks {
        ProjectModelLinks {
            update: None,
            update_immediately: None,
            delete: None,
            create_work_package: None,
            create_work_package_immediately: None,
            param_self: Box::new(param_self),
            categories: Box::new(categories),
            types: Box::new(types),
            versions: Box::new(versions),
            memberships: Box::new(memberships),
            work_packages: Box::new(work_packages),
            parent: None,
            status: None,
            storages: None,
            project_storages: None,
            ancestors: None,
        }
    }
}
