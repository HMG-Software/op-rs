/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NotificationModelEmbedded {
    #[serde(rename = "actor", skip_serializing_if = "Option::is_none")]
    pub actor: Option<Box<models::UserModel>>,
    #[serde(rename = "project")]
    pub project: Box<models::ProjectModel>,
    #[serde(rename = "activity", skip_serializing_if = "Option::is_none")]
    pub activity: Option<Box<models::ActivityModel>>,
    #[serde(rename = "resource")]
    pub resource: Box<models::NotificationModelEmbeddedResource>,
}

impl NotificationModelEmbedded {
    pub fn new(
        project: models::ProjectModel,
        resource: models::NotificationModelEmbeddedResource,
    ) -> NotificationModelEmbedded {
        NotificationModelEmbedded {
            actor: None,
            project: Box::new(project),
            activity: None,
            resource: Box::new(resource),
        }
    }
}
