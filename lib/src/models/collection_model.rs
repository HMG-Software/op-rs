/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CollectionModel {
    #[serde(rename = "_type")]
    pub _type: Type,
    /// The total amount of elements available in the collection.
    #[serde(rename = "total")]
    pub total: i32,
    /// Actual amount of elements in this response.
    #[serde(rename = "count")]
    pub count: i32,
    #[serde(rename = "_links")]
    pub _links: Box<models::CollectionModelLinks>,
}

impl CollectionModel {
    pub fn new(
        _type: Type,
        total: i32,
        count: i32,
        _links: models::CollectionModelLinks,
    ) -> CollectionModel {
        CollectionModel {
            _type,
            total,
            count,
            _links: Box::new(_links),
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Collection")]
    Collection,
}

impl Default for Type {
    fn default() -> Type {
        Self::Collection
    }
}
