/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TimeEntryActivityModel {
    #[serde(rename = "_type")]
    pub _type: Type,
    /// Time entry id
    #[serde(rename = "id")]
    pub id: i32,
    /// The human readable name chosen for this activity
    #[serde(rename = "name")]
    pub name: String,
    /// The rank the activity has in a list of activities
    #[serde(rename = "position")]
    pub position: i32,
    /// Flag to signal whether this activity is the default activity
    #[serde(rename = "default")]
    pub default: bool,
    #[serde(rename = "_embedded")]
    pub _embedded: Box<models::TimeEntryActivityModelEmbedded>,
    #[serde(rename = "_links")]
    pub _links: Box<models::TimeEntryActivityModelLinks>,
}

impl TimeEntryActivityModel {
    pub fn new(
        _type: Type,
        id: i32,
        name: String,
        position: i32,
        default: bool,
        _embedded: models::TimeEntryActivityModelEmbedded,
        _links: models::TimeEntryActivityModelLinks,
    ) -> TimeEntryActivityModel {
        TimeEntryActivityModel {
            _type,
            id,
            name,
            position,
            default,
            _embedded: Box::new(_embedded),
            _links: Box::new(_links),
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "TimeEntriesActivity")]
    TimeEntriesActivity,
}

impl Default for Type {
    fn default() -> Type {
        Self::TimeEntriesActivity
    }
}
