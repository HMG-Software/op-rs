/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WeekDayModel {
    #[serde(rename = "_type")]
    pub _type: Type,
    /// The week day from 1 to 7. 1 is Monday. 7 is Sunday.
    #[serde(rename = "day")]
    pub day: i32,
    /// The week day name.
    #[serde(rename = "name")]
    pub name: String,
    /// `true` for a working week day, `false` otherwise.
    #[serde(rename = "working")]
    pub working: bool,
    #[serde(rename = "_links", skip_serializing_if = "Option::is_none")]
    pub _links: Option<Box<models::WeekDaySelfLinkModel>>,
}

impl WeekDayModel {
    pub fn new(_type: Type, day: i32, name: String, working: bool) -> WeekDayModel {
        WeekDayModel {
            _type,
            day,
            name,
            working,
            _links: None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "WeekDay")]
    WeekDay,
}

impl Default for Type {
    fn default() -> Type {
        Self::WeekDay
    }
}
