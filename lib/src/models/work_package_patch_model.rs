/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkPackagePatchModel {
    /// The version of the item as used for optimistic locking
    #[serde(rename = "lockVersion")]
    pub lock_version: i32,
    /// Work package subject
    #[serde(rename = "subject", skip_serializing_if = "Option::is_none")]
    pub subject: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<Box<models::Formattable>>,
    /// If false (default) schedule automatically.
    #[serde(rename = "scheduleManually", skip_serializing_if = "Option::is_none")]
    pub schedule_manually: Option<bool>,
    /// Scheduled beginning of a work package
    #[serde(rename = "startDate", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<String>,
    /// Scheduled end of a work package
    #[serde(rename = "dueDate", skip_serializing_if = "Option::is_none")]
    pub due_date: Option<String>,
    /// Date on which a milestone is achieved
    #[serde(rename = "date", skip_serializing_if = "Option::is_none")]
    pub date: Option<String>,
    /// Time a work package likely needs to be completed excluding its descendants
    #[serde(rename = "estimatedTime", skip_serializing_if = "Option::is_none")]
    pub estimated_time: Option<String>,
    /// **(NOT IMPLEMENTED)** When scheduling, whether or not to ignore the non working days being defined. A work package with the flag set to true will be allowed to be scheduled to a non working day.
    #[serde(
        rename = "ignoreNonWorkingDays",
        skip_serializing_if = "Option::is_none"
    )]
    pub ignore_non_working_days: Option<bool>,
    /// The time booked for this work package by users working on it  # Conditions  **Permission** view time entries
    #[serde(rename = "spentTime", skip_serializing_if = "Option::is_none")]
    pub spent_time: Option<String>,
    /// Amount of total completion for a work package
    #[serde(rename = "percentageDone", skip_serializing_if = "Option::is_none")]
    pub percentage_done: Option<i32>,
    /// Time of creation
    #[serde(rename = "createdAt", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    /// Time of the most recent change to the work package
    #[serde(rename = "updatedAt", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    #[serde(rename = "_links", skip_serializing_if = "Option::is_none")]
    pub _links: Option<Box<models::WorkPackagePatchModelLinks>>,
}

impl WorkPackagePatchModel {
    pub fn new(lock_version: i32) -> WorkPackagePatchModel {
        WorkPackagePatchModel {
            lock_version,
            subject: None,
            description: None,
            schedule_manually: None,
            start_date: None,
            due_date: None,
            date: None,
            estimated_time: None,
            ignore_non_working_days: None,
            spent_time: None,
            percentage_done: None,
            created_at: None,
            updated_at: None,
            _links: None,
        }
    }
}
