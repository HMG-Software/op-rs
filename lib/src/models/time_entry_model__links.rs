/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TimeEntryModelLinks {
    #[serde(rename = "self")]
    pub param_self: Box<models::TimeEntryModelLinksSelf>,
    #[serde(rename = "updateImmediately", skip_serializing_if = "Option::is_none")]
    pub update_immediately: Option<Box<models::TimeEntryModelLinksUpdateImmediately>>,
    #[serde(rename = "update", skip_serializing_if = "Option::is_none")]
    pub update: Option<Box<models::TimeEntryModelLinksUpdate>>,
    #[serde(rename = "delete", skip_serializing_if = "Option::is_none")]
    pub delete: Option<Box<models::TimeEntryModelLinksDelete>>,
    #[serde(rename = "schema", skip_serializing_if = "Option::is_none")]
    pub schema: Option<Box<models::TimeEntryModelLinksSchema>>,
    #[serde(rename = "project")]
    pub project: Box<models::TimeEntryModelLinksProject>,
    #[serde(rename = "workPackage", skip_serializing_if = "Option::is_none")]
    pub work_package: Option<Box<models::TimeEntryModelLinksWorkPackage>>,
    #[serde(rename = "user")]
    pub user: Box<models::TimeEntryModelLinksUser>,
    #[serde(rename = "activity")]
    pub activity: Box<models::TimeEntryModelLinksActivity>,
}

impl TimeEntryModelLinks {
    pub fn new(
        param_self: models::TimeEntryModelLinksSelf,
        project: models::TimeEntryModelLinksProject,
        user: models::TimeEntryModelLinksUser,
        activity: models::TimeEntryModelLinksActivity,
    ) -> TimeEntryModelLinks {
        TimeEntryModelLinks {
            param_self: Box::new(param_self),
            update_immediately: None,
            update: None,
            delete: None,
            schema: None,
            project: Box::new(project),
            work_package: None,
            user: Box::new(user),
            activity: Box::new(activity),
        }
    }
}
