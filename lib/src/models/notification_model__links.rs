/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct NotificationModelLinks {
    #[serde(rename = "self")]
    pub param_self: Box<models::NotificationModelLinksSelf>,
    #[serde(rename = "readIAN", skip_serializing_if = "Option::is_none")]
    pub read_ian: Option<Box<models::NotificationModelLinksReadIan>>,
    #[serde(rename = "unreadIAN", skip_serializing_if = "Option::is_none")]
    pub unread_ian: Option<Box<models::NotificationModelLinksUnreadIan>>,
    #[serde(rename = "project")]
    pub project: Box<models::NotificationModelLinksProject>,
    #[serde(rename = "actor")]
    pub actor: Box<models::NotificationModelLinksActor>,
    #[serde(rename = "resource")]
    pub resource: Box<models::NotificationModelLinksResource>,
    #[serde(rename = "activity")]
    pub activity: Box<models::NotificationModelLinksActivity>,
    #[serde(rename = "details")]
    pub details: Vec<models::NotificationModelLinksDetailsInner>,
}

impl NotificationModelLinks {
    pub fn new(
        param_self: models::NotificationModelLinksSelf,
        project: models::NotificationModelLinksProject,
        actor: models::NotificationModelLinksActor,
        resource: models::NotificationModelLinksResource,
        activity: models::NotificationModelLinksActivity,
        details: Vec<models::NotificationModelLinksDetailsInner>,
    ) -> NotificationModelLinks {
        NotificationModelLinks {
            param_self: Box::new(param_self),
            read_ian: None,
            unread_ian: None,
            project: Box::new(project),
            actor: Box::new(actor),
            resource: Box::new(resource),
            activity: Box::new(activity),
            details,
        }
    }
}
