/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProjectStorageModelLinks {
    #[serde(rename = "self")]
    pub param_self: Box<models::ProjectStorageModelLinksSelf>,
    #[serde(rename = "creator")]
    pub creator: Box<models::ProjectStorageModelLinksCreator>,
    #[serde(rename = "storage")]
    pub storage: Box<models::ProjectStorageModelLinksStorage>,
    #[serde(rename = "project")]
    pub project: Box<models::ProjectStorageModelLinksProject>,
    #[serde(rename = "projectFolder", skip_serializing_if = "Option::is_none")]
    pub project_folder: Option<Box<models::ProjectStorageModelLinksProjectFolder>>,
    #[serde(rename = "open", skip_serializing_if = "Option::is_none")]
    pub open: Option<Box<models::ProjectStorageModelLinksOpen>>,
    #[serde(
        rename = "openWithConnectionEnsured",
        skip_serializing_if = "Option::is_none"
    )]
    pub open_with_connection_ensured:
        Option<Box<models::ProjectStorageModelLinksOpenWithConnectionEnsured>>,
}

impl ProjectStorageModelLinks {
    pub fn new(
        param_self: models::ProjectStorageModelLinksSelf,
        creator: models::ProjectStorageModelLinksCreator,
        storage: models::ProjectStorageModelLinksStorage,
        project: models::ProjectStorageModelLinksProject,
    ) -> ProjectStorageModelLinks {
        ProjectStorageModelLinks {
            param_self: Box::new(param_self),
            creator: Box::new(creator),
            storage: Box::new(storage),
            project: Box::new(project),
            project_folder: None,
            open: None,
            open_with_connection_ensured: None,
        }
    }
}
