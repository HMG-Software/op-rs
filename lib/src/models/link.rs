/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Link {
    /// URL to the referenced resource (might be relative)
    #[serde(rename = "href", deserialize_with = "Option::deserialize")]
    pub href: Option<String>,
    /// Representative label for the resource
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// If true the href contains parts that need to be replaced by the client
    #[serde(rename = "templated", skip_serializing_if = "Option::is_none")]
    pub templated: Option<bool>,
    /// The HTTP verb to use when requesting the resource
    #[serde(rename = "method", skip_serializing_if = "Option::is_none")]
    pub method: Option<String>,
    /// The payload to send in the request to achieve the desired result
    #[serde(rename = "payload", skip_serializing_if = "Option::is_none")]
    pub payload: Option<serde_json::Value>,
    /// An optional unique identifier to the link object
    #[serde(rename = "identifier", skip_serializing_if = "Option::is_none")]
    pub identifier: Option<String>,
    /// The MIME-Type of the returned resource.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
}

impl Link {
    pub fn new(href: Option<String>) -> Link {
        Link {
            href,
            title: None,
            templated: None,
            method: None,
            payload: None,
            identifier: None,
            r#type: None,
        }
    }
}
