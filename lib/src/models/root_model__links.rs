/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RootModelLinks {
    #[serde(rename = "self")]
    pub param_self: Box<models::RootModelLinksSelf>,
    #[serde(rename = "configuration")]
    pub configuration: Box<models::RootModelLinksConfiguration>,
    #[serde(rename = "memberships")]
    pub memberships: Box<models::RootModelLinksMemberships>,
    #[serde(rename = "priorities")]
    pub priorities: Box<models::RootModelLinksPriorities>,
    #[serde(rename = "relations")]
    pub relations: Box<models::RootModelLinksRelations>,
    #[serde(rename = "statuses")]
    pub statuses: Box<models::RootModelLinksStatuses>,
    #[serde(rename = "time_entries")]
    pub time_entries: Box<models::RootModelLinksTimeEntries>,
    #[serde(rename = "types")]
    pub types: Box<models::RootModelLinksTypes>,
    #[serde(rename = "user")]
    pub user: Box<models::RootModelLinksUser>,
    #[serde(rename = "userPreferences")]
    pub user_preferences: Box<models::RootModelLinksUserPreferences>,
    #[serde(rename = "workPackages")]
    pub work_packages: Box<models::RootModelLinksWorkPackages>,
}

impl RootModelLinks {
    pub fn new(
        param_self: models::RootModelLinksSelf,
        configuration: models::RootModelLinksConfiguration,
        memberships: models::RootModelLinksMemberships,
        priorities: models::RootModelLinksPriorities,
        relations: models::RootModelLinksRelations,
        statuses: models::RootModelLinksStatuses,
        time_entries: models::RootModelLinksTimeEntries,
        types: models::RootModelLinksTypes,
        user: models::RootModelLinksUser,
        user_preferences: models::RootModelLinksUserPreferences,
        work_packages: models::RootModelLinksWorkPackages,
    ) -> RootModelLinks {
        RootModelLinks {
            param_self: Box::new(param_self),
            configuration: Box::new(configuration),
            memberships: Box::new(memberships),
            priorities: Box::new(priorities),
            relations: Box::new(relations),
            statuses: Box::new(statuses),
            time_entries: Box::new(time_entries),
            types: Box::new(types),
            user: Box::new(user),
            user_preferences: Box::new(user_preferences),
            work_packages: Box::new(work_packages),
        }
    }
}
