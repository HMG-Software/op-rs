/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RelationModel {
    /// Relation ID
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// The internationalized name of this kind of relation
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Which kind of relation (blocks, precedes, etc.)
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    /// The kind of relation from the other WP's perspective
    #[serde(rename = "reverseType", skip_serializing_if = "Option::is_none")]
    pub reverse_type: Option<String>,
    /// Short text further describing the relation
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The delay in days between closing of `from` and start of `to`
    #[serde(rename = "delay*", skip_serializing_if = "Option::is_none")]
    pub delay_star: Option<i32>,
    #[serde(rename = "_links", skip_serializing_if = "Option::is_none")]
    pub _links: Option<Box<models::RelationModelLinks>>,
}

impl RelationModel {
    pub fn new() -> RelationModel {
        RelationModel {
            id: None,
            name: None,
            r#type: None,
            reverse_type: None,
            description: None,
            delay_star: None,
            _links: None,
        }
    }
}
