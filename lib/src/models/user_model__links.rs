/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserModelLinks {
    #[serde(rename = "self")]
    pub param_self: Box<models::UserModelLinksSelf>,
    #[serde(rename = "memberships")]
    pub memberships: Box<models::UserModelLinksMemberships>,
    #[serde(rename = "showUser")]
    pub show_user: Box<models::UserModelLinksShowUser>,
    #[serde(rename = "updateImmediately", skip_serializing_if = "Option::is_none")]
    pub update_immediately: Option<Box<models::UserModelLinksUpdateImmediately>>,
    #[serde(rename = "lock", skip_serializing_if = "Option::is_none")]
    pub lock: Option<Box<models::UserModelLinksLock>>,
    #[serde(rename = "unlock", skip_serializing_if = "Option::is_none")]
    pub unlock: Option<Box<models::UserModelLinksUnlock>>,
    #[serde(rename = "delete", skip_serializing_if = "Option::is_none")]
    pub delete: Option<Box<models::UserModelLinksDelete>>,
}

impl UserModelLinks {
    pub fn new(param_self: models::UserModelLinksSelf, memberships: models::UserModelLinksMemberships, show_user: models::UserModelLinksShowUser) -> UserModelLinks {
        UserModelLinks {
            param_self: Box::new(param_self),
            memberships: Box::new(memberships),
            show_user: Box::new(show_user),
            update_immediately: None,
            lock: None,
            unlock: None,
            delete: None,
        }
    }
}

