/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GridReadModelLinks {
    #[serde(rename = "self")]
    pub param_self: Box<models::GridReadModelLinksSelf>,
    #[serde(rename = "attachments", skip_serializing_if = "Option::is_none")]
    pub attachments: Option<Box<models::GridReadModelLinksAttachments>>,
    #[serde(rename = "addAttachment", skip_serializing_if = "Option::is_none")]
    pub add_attachment: Option<Box<models::GridReadModelLinksAddAttachment>>,
    #[serde(rename = "scope")]
    pub scope: Box<models::GridReadModelLinksScope>,
    #[serde(rename = "updateImmediately", skip_serializing_if = "Option::is_none")]
    pub update_immediately: Option<Box<models::GridReadModelLinksUpdateImmediately>>,
    #[serde(rename = "update", skip_serializing_if = "Option::is_none")]
    pub update: Option<Box<models::GridReadModelLinksUpdate>>,
    #[serde(rename = "delete", skip_serializing_if = "Option::is_none")]
    pub delete: Option<Box<models::GridReadModelLinksDelete>>,
}

impl GridReadModelLinks {
    pub fn new(
        param_self: models::GridReadModelLinksSelf,
        scope: models::GridReadModelLinksScope,
    ) -> GridReadModelLinks {
        GridReadModelLinks {
            param_self: Box::new(param_self),
            attachments: None,
            add_attachment: None,
            scope: Box::new(scope),
            update_immediately: None,
            update: None,
            delete: None,
        }
    }
}
