/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MembershipReadModelLinks {
    #[serde(rename = "self")]
    pub param_self: Box<models::MembershipReadModelLinksSelf>,
    #[serde(rename = "schema")]
    pub schema: Box<models::MembershipReadModelLinksSchema>,
    #[serde(rename = "update", skip_serializing_if = "Option::is_none")]
    pub update: Option<Box<models::MembershipReadModelLinksUpdate>>,
    #[serde(rename = "updateImmediately", skip_serializing_if = "Option::is_none")]
    pub update_immediately: Option<Box<models::MembershipReadModelLinksUpdateImmediately>>,
    #[serde(rename = "project")]
    pub project: Box<models::MembershipReadModelLinksProject>,
    #[serde(rename = "principal")]
    pub principal: Box<models::MembershipReadModelLinksPrincipal>,
    #[serde(rename = "roles")]
    pub roles: Vec<models::MembershipReadModelLinksRolesInner>,
}

impl MembershipReadModelLinks {
    pub fn new(
        param_self: models::MembershipReadModelLinksSelf,
        schema: models::MembershipReadModelLinksSchema,
        project: models::MembershipReadModelLinksProject,
        principal: models::MembershipReadModelLinksPrincipal,
        roles: Vec<models::MembershipReadModelLinksRolesInner>,
    ) -> MembershipReadModelLinks {
        MembershipReadModelLinks {
            param_self: Box::new(param_self),
            schema: Box::new(schema),
            update: None,
            update_immediately: None,
            project: Box::new(project),
            principal: Box::new(principal),
            roles,
        }
    }
}
