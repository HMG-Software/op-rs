/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VersionModel {
    /// Version id
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Version name
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<Box<models::Formattable>>,
    #[serde(rename = "startDate", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<String>,
    #[serde(rename = "endDate", skip_serializing_if = "Option::is_none")]
    pub end_date: Option<String>,
    /// The current status of the version
    #[serde(rename = "status")]
    pub status: String,
    /// The current status of the version
    #[serde(rename = "sharing")]
    pub sharing: String,
    /// Time of creation
    #[serde(rename = "createdAt")]
    pub created_at: String,
    /// Time of the most recent change to the version
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
    #[serde(rename = "_links", skip_serializing_if = "Option::is_none")]
    pub _links: Option<Box<models::VersionModelLinks>>,
}

impl VersionModel {
    pub fn new(
        name: String,
        status: String,
        sharing: String,
        created_at: String,
        updated_at: String,
    ) -> VersionModel {
        VersionModel {
            id: None,
            name,
            description: None,
            start_date: None,
            end_date: None,
            status,
            sharing,
            created_at,
            updated_at,
            _links: None,
        }
    }
}
