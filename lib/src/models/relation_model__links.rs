/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RelationModelLinks {
    #[serde(rename = "update", skip_serializing_if = "Option::is_none")]
    pub update: Option<Box<models::RelationModelLinksUpdate>>,
    #[serde(rename = "updateImmediately", skip_serializing_if = "Option::is_none")]
    pub update_immediately: Option<Box<models::RelationModelLinksUpdateImmediately>>,
    #[serde(rename = "delete", skip_serializing_if = "Option::is_none")]
    pub delete: Option<Box<models::RelationModelLinksDelete>>,
    #[serde(rename = "self")]
    pub param_self: Box<models::RelationModelLinksSelf>,
    #[serde(rename = "schema")]
    pub schema: Box<models::RelationModelLinksSchema>,
    #[serde(rename = "from")]
    pub from: Box<models::RelationModelLinksFrom>,
    #[serde(rename = "to")]
    pub to: Box<models::RelationModelLinksTo>,
}

impl RelationModelLinks {
    pub fn new(
        param_self: models::RelationModelLinksSelf,
        schema: models::RelationModelLinksSchema,
        from: models::RelationModelLinksFrom,
        to: models::RelationModelLinksTo,
    ) -> RelationModelLinks {
        RelationModelLinks {
            update: None,
            update_immediately: None,
            delete: None,
            param_self: Box::new(param_self),
            schema: Box::new(schema),
            from: Box::new(from),
            to: Box::new(to),
        }
    }
}
