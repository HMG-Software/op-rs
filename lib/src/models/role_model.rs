/*
 * OpenProject API V3 (Stable)
 *
 * The version of the OpenAPI document: 3
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RoleModel {
    #[serde(rename = "_type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<Type>,
    /// Role id
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Role name
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "_links", skip_serializing_if = "Option::is_none")]
    pub _links: Option<Box<models::RoleModelLinks>>,
}

impl RoleModel {
    pub fn new(name: String) -> RoleModel {
        RoleModel {
            _type: None,
            id: None,
            name,
            _links: None,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Role")]
    Role,
}

impl Default for Type {
    fn default() -> Type {
        Self::Role
    }
}
